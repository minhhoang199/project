entity AppConfig {
	configKey ConfigKey
	configValue String maxlength(500)
}
enum ConfigKey {
	HOME_SLIDER_STATUS,
    HOME_SLIDER_ITEM,
    HOME_STORY_STATUS,
    HOME_STORY_ITEM
}

entity Category {
	categoryName String maxlength(300),
    description String maxlength(500),
    slug String maxlength(300) required unique
    isEnable Boolean 
}

entity Color {
	colorName String maxlength(300),
    description String maxlength(500),
    hexValue String maxlength(20)
}
enum ProductCharacteristicType {
	SIZE,
    COLOR
}
entity ProductCharacteristic {
	type ProductCharacteristicType,
    name String maxlength(500),
    value String maxlength(500)
}

entity Customer {
	customerCode String maxlength(50),
	customerName String maxlength(300),
    tel String maxlength(100),
    email String maxlength(300)
}
entity Media {
    mediaName String maxlength(40),
    mediaType String maxlength(50),
    mediaURL String maxlength(200),
    mediaDescription String maxlength(500),
    mediaAlt String maxlength(500),
    mediaCaption String maxlength(500),
    uploadYear String maxlength(20),
    uploadMonth String maxlength(20)
}

entity ShopNew {
	newTitle String maxlength(500),
    newContent String maxlength(3000),
    newType String maxlength(300),
    createdBy String maxlength(200),
    createdDate Long,
    modifiedBy String maxlength(200),
    modifiedDate Long
}

entity Product {
    name String maxlength(300),
    productCode String maxlength(100),
    productSKU String maxlength(200),
    price Long min(1) max(100000000) required,
    finalPrice Long min(1) max(100000000) required,
    releaseDateUnix Long,
    releaseType String maxlength(200),
    designer String maxlength(300),
    description String maxlength(1000),
    modelHeight String maxlength(100),
    modelWeight String maxlength(100),
    material String maxlength(300),
    slug String maxlength(300) unique,
	isValid Boolean,
    isEnable Boolean,
    status String,
    createdBy String maxlength(200),
    createdDate Long,
    modifiedBy String maxlength(200),
    modifiedDate Long
}
entity ProductSize {
    sizeName String maxlength(200),
    description String maxlength(500)
}
entity ShopOrder {
	orderStatus String maxlength(100),
    deliveryAddress String maxlength(3000),
    totalPrice Double min(0) required,
    createdBy String maxlength(200),
    createdDate Long required,
    modifiedBy String maxlength(200),
    modifiedDate Long
}
entity OrderDesc {
	count Long min(1) required,
    orderPrice Double min(0) required,
    finalPrice Double min(0) required,
}
entity Storage {
	capacity Double min(1),
    createdBy String maxlength(200),
    createdDate Long,
    modifiedBy String maxlength(200),
    modifiedDate Long
}
entity Store {
	storeName String maxlength(300),
    address String maxlength(500),
    tel String maxlength(100),
    email String maxlength(300),
    description String maxlength(1000),
    workingHour String maxlength(100),
    manager String maxlength(100)
}
entity Tag {
	tag String maxlength(300),
    description String maxlength(500)
}

entity Province {
	provinceName String maxlength(200),
    provinceType String maxlength(100)
}
entity District {
	districtName String maxlength(200),
    districtType String maxlength(100)
}
entity Ward {
	wardName String maxlength(200),
    wardType String maxlength(100)
}
entity Stack {
	product Long required,
	stackId Long required
}

relationship ManyToOne {
	Product{category(categoryName)} to Category
}
relationship ManyToOne {
	Storage to Product,
	Storage to ProductSize,
	Storage to Color,
    Storage to Store
}
relationship ManyToOne {
	Customer to Province,
    Customer to District,
	Customer to Ward,
}
relationship OneToMany {
	Customer to ShopOrder
}
relationship OneToOne {
	Customer to User
}
relationship ManyToOne {
	ShopOrder to Province,
    ShopOrder to District,
	ShopOrder to Ward
}
relationship OneToOne {
	OrderDesc to Storage
}
relationship OneToMany {
	ShopOrder to OrderDesc
}
relationship OneToMany {
	Province to District
}
relationship OneToMany {
	District to Ward
}
relationship ManyToMany {
	Product{media} to Media{product}
}
relationship ManyToMany {
	Product{tag} to Tag{product},
    ShopNew{tag} to Tag{new}
}

paginate AppConfig, District, Tag with infinite-scroll
paginate Product, ShopOrder, Storage, Ward, ShopNew, Customer, Media with pagination

service Product with serviceImpl